Create and Manage Cloud Resources: Challenge Lab
+==============================================+
Link: https://partner.cloudskillsboost.google/focuses/11604?parent=catalog

# console setup: formatting
# Note: this is not part of the tasks, just a personal preference

$ gcloud config get accessibility/screen_reader
$ gcloud config set accessibility/screen_reader false


=====================================Task 1. Create a project jumphost instance=====================================

gcloud compute instances create nucleus-jumphost-797 \
  --network nucleus-vpc \
  --zone us-central1-a  \
  --machine-type f1-micro 
   
  
  
===================================================Task 2: Kubernetes================================================

gcloud container clusters create --machine-type=n1-standard-1 --network nucleus-vpc --zone=us-central1-a nucleus-kcluster 
gcloud container clusters list

gcloud container clusters get-credentials nucleus-kcluster --zone=us-central1-a

kubectl create deployment hello-app --image=gcr.io/google-samples/hello-app:2.0
kubectl get deployments

kubectl expose deployment hello-app --type=LoadBalancer --port 8082
kubectl get services
	

=========================================Task 3: Set up an HTTP load balancer=========================================

0. Startup script

$ cat << EOF > startup.sh
#! /bin/bash
apt-get update
apt-get install -y nginx
service nginx start
sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html
EOF

$ ls -lrt


1. Backend Template

gcloud compute instance-templates create nucleus-lb-backend-template \
   --region=us-central1 \
   --network=nucleus-vpc \
   --tags=allow-health-check \
   --machine-type=f1-micro \
   --metadata-from-file startup-script=startup.sh 
	 

2. Backend Instance Group
	 
gcloud compute instance-groups managed create nucleus-lb-backend-group \
   --template=nucleus-lb-backend-template --size=2 --region=us-central1 
   
Note: In case of mistake, run below to delete before attempting to create again

gcloud compute instance-groups managed delete nucleus-lb-backend-group
  
  
3. Firewall rule for IG
 
gcloud compute firewall-rules create allow-tcp-rule-938 \
  --network=nucleus-vpc \
  --action=allow \
  --rules=tcp:80
  
  
4. Health check for the backend service

gcloud compute health-checks create http http-basic-check \
  --port 80
 
 
5. Named port for the IG, will be used by the backend service

gcloud compute instance-groups managed \
          set-named-ports nucleus-lb-backend-group \
          --named-ports http:80 \
          --region us-central1
		  

6. Backend service with Health check, protocol, named port
		  
gcloud compute backend-services create nucleus-web-backend-service \
  --protocol=HTTP \
  --health-checks=http-basic-check \
  --global
  --port-name=nucleus-lb-backend-group
  
 
gcloud compute backend-services add-backend nucleus-web-backend-service \
  --instance-group=nucleus-lb-backend-group \
  --instance-group-region=us-central1 \
  --global
  
  
7. URL map with link to Backend service

gcloud compute url-maps create nucleus-web-map-http \
    --default-service nucleus-web-backend-service
	

8. Target HTTP(S) proxy that will terminate connection and redirect to URL map
gcloud compute target-http-proxies create nucleus-http-lb-proxy \
    --url-map nucleus-web-map-http
	
	
9. Forwarding rule

gcloud compute forwarding-rules create nucleus-http-rule \
    --global \
    --target-http-proxy=nucleus-http-lb-proxy \
    --ports=80
	